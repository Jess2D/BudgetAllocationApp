{"ast":null,"code":"var _jsxFileName = \"/Users/jessicasilveira/Documents/BudgetAllocationApp/src/context/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\n\n// 5. The reducer - this is used to update the state, based on the action\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppReducer = (state, action) => {\n  let new_budgets = [];\n  switch (action.type) {\n    case 'ADD_QUANTITY':\n      let updatedqty = false;\n      state.budgets.map(budget => {\n        if (budget.department === action.payload.department) {\n          budget.quantity = budget.quantity + action.payload.quantity;\n          updatedqty = true;\n          console.log(updatedqty);\n        }\n        new_budgets.push(budget);\n        return true;\n      });\n      state.budgets = new_budgets;\n      action.type = \"DONE\";\n      return {\n        ...state\n      };\n    case 'RED_QUANTITY':\n      state.budgets.map(budget => {\n        if (budget.department === action.payload.department) {\n          budget.quantity = budget.quantity - action.payload.quantity;\n        }\n        budget.quantity = budget.quantity < 0 ? 0 : budget.quantity;\n        new_budgets.push(budget);\n        return true;\n      });\n      state.budgets = new_budgets;\n      action.type = \"DONE\";\n      return {\n        ...state\n      };\n    case 'DELETE_ITEM':\n      state.budgets.map(budget => {\n        if (budget.department === action.payload.department) {\n          budget.quantity = 0;\n        }\n        new_budgets.push(budget);\n        return true;\n      });\n      state.budgets = new_budgets;\n      action.type = \"DONE\";\n      return {\n        ...state\n      };\n    case 'CHG_Currency':\n      action.type = \"DONE\";\n      state.Currency = action.payload;\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\n\n// 1. Sets the initial state when the app loads\n_c = AppReducer;\nconst initialState = {\n  budgets: [{\n    id: \"IT\",\n    department: 'IT',\n    quantity: 0,\n    unitbudget: 500\n  }, {\n    id: \"Finance\",\n    department: 'Finance',\n    quantity: 0,\n    unitbudget: 300\n  }, {\n    id: \"HR\",\n    department: 'HR',\n    quantity: 0,\n    unitbudget: 40\n  }, {\n    id: \"Marketing\",\n    department: 'Marketing',\n    quantity: 0,\n    unitbudget: 50\n  }, {\n    id: \"Sales\",\n    department: 'Sales',\n    quantity: 0,\n    unitbudget: 70\n  }],\n  Currency: '£'\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = /*#__PURE__*/createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = props => {\n  _s();\n  // 4. Sets up the app state. takes a reducer, and an initial state\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const totalbudgets = state.budgets.reduce((total, item) => {\n    return total = total + item.unitbudget * item.quantity;\n  }, 0);\n  state.BudgetValue = totalbudgets;\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      budgets: state.budgets,\n      BudgetValue: state.BudgetValue,\n      dispatch,\n      Currency: state.Currency\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c2 = AppProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useReducer","jsxDEV","_jsxDEV","AppReducer","state","action","new_budgets","type","updatedqty","budgets","map","budget","department","payload","quantity","console","log","push","Currency","_c","initialState","id","unitbudget","AppContext","AppProvider","props","_s","dispatch","totalbudgets","reduce","total","item","BudgetValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/jessicasilveira/Documents/BudgetAllocationApp/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// 5. The reducer - this is used to update the state, based on the action\nexport const AppReducer = (state, action) => {\n    let new_budgets = [];\n    switch (action.type) {\n        case 'ADD_QUANTITY':\n            let updatedqty = false;\n            state.budgets.map((budget)=>{\n                if(budget.department === action.payload.department) {\n                    budget.quantity = budget.quantity + action.payload.quantity;\n                    updatedqty = true;\n                    console.log(updatedqty);\n                }\n                new_budgets.push(budget);\n                return true;\n            })\n            state.budgets = new_budgets;\n            action.type = \"DONE\";\n            return {\n                ...state,\n            };\n\n            case 'RED_QUANTITY':\n                state.budgets.map((budget)=>{\n                    if(budget.department === action.payload.department) {\n                        budget.quantity = budget.quantity - action.payload.quantity;\n                    }\n                    budget.quantity = budget.quantity < 0 ? 0: budget.quantity;\n                    new_budgets.push(budget);\n                    return true;\n                })\n                state.budgets = new_budgets;\n                action.type = \"DONE\";\n                return {\n                    ...state,\n                };\n        case 'DELETE_ITEM':\n            state.budgets.map((budget)=>{\n                if(budget.department === action.payload.department) {\n                    budget.quantity = 0;\n                }\n                new_budgets.push(budget);\n                return true;\n            })\n            state.budgets = new_budgets;\n            action.type = \"DONE\";\n            return {\n                ...state,\n            };\n    case 'CHG_Currency':\n            action.type = \"DONE\";\n            state.Currency = action.payload;\n            return {\n                ...state\n            }\n\n        default:\n            return state;\n    }\n};\n\n// 1. Sets the initial state when the app loads\nconst initialState = {\n    budgets: [\n        { id: \"IT\", department: 'IT', quantity: 0, unitbudget: 500 },\n        { id: \"Finance\", department: 'Finance', quantity: 0, unitbudget: 300 },\n        { id: \"HR\", department: 'HR', quantity: 0, unitbudget: 40 },\n        { id: \"Marketing\", department: 'Marketing', quantity: 0, unitbudget: 50 },\n        { id: \"Sales\", department: 'Sales', quantity: 0, unitbudget: 70 },\n    ],\n    Currency: '£'\n};\n\n// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext = createContext();\n\n// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider = (props) => {\n    // 4. Sets up the app state. takes a reducer, and an initial state\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    const totalbudgets = state.budgets.reduce((total, item) => {\n        return (total = total + (item.unitbudget*item.quantity));\n    }, 0);\nstate.BudgetValue = totalbudgets;\n\n    return (\n        <AppContext.Provider\n            value={{\n                budgets: state.budgets,\n                BudgetValue: state.BudgetValue,\n                dispatch,\n                Currency: state.Currency\n            }}\n        >\n            {props.children}\n        </AppContext.Provider>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}